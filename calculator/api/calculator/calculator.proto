syntax = "proto3";

package calculator;

option go_package = ".;pb";

message Values {
    int32 first_value = 1;
    int32 second_value = 2;
}

message CalculatorRequest {
    Values values = 1;
}

message CalculatorResponse {
    int32 sum = 1;
}

message StreamRequest {
    int32 positive_integer = 1;
}

message StreamResponse {
    int32 factor = 1;
}

message ResponseDouble {
    double average = 1;
}

message ResponseMaximum {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service Calculator {
    // Implement calculator unary
    rpc Calc(CalculatorRequest) returns (CalculatorResponse) {
    }

    // Calculator server streaming
    rpc Decomposition(StreamRequest) returns (stream StreamResponse) {
    }

    // Calculator client streaming
    rpc Average(stream StreamRequest) returns (ResponseDouble) {
    }

    // Calculator bi-directional streaming
    rpc Maximum(stream StreamRequest) returns (stream ResponseMaximum) {
    }

    // error handling
    // rpc will throw an exception if the sent number is negative
    // the error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {
    }
}
